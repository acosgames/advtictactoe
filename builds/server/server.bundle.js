(()=>{"use strict";const e=new class{constructor(){this.msg=JSON.parse(JSON.stringify(globals.action())),this.originalGame=JSON.parse(JSON.stringify(globals.game())),this.nextGame=JSON.parse(JSON.stringify(globals.game())),this.isNewGame=!1,this.markedForDelete=!1,this.nextTimeLimit=0,this.kickedPlayers=[],this.nextGame&&0!=Object.keys(this.nextGame.rules).length||(this.isNewGame=!0,this.error("Missing Rules")),this.nextGame&&("state"in this.nextGame||(this.nextGame.state={}),"players"in this.nextGame||(this.nextGame.players={}),this.nextGame.prev={},"next"in this.nextGame||(this.nextGame.next={}),"rules"in this.nextGame||(this.nextGame.rules={}),this.nextGame.events=[])}on(e,t){(this.msg.type==e||"newgame"==e&&this.isNewGame)&&t(this.msg)}setGame(e){for(var t in this.nextGame.players){let s=this.nextGame.players[t];e.players[t]={name:s.name}}this.nextGame=e}submit(){this.nextGame.next&&(this.nextGame.next.timelimit=this.nextTimeLimit,this.markedForDelete&&delete this.nextGame.next.timelimit),this.kickedPlayers.length>0&&(this.nextGame.kick=this.kickedPlayers),globals.finish(this.nextGame)}killGame(){this.markedForDelete=!0,globals.killGame()}log(e){globals.log(e)}error(e){globals.error(e)}kickPlayer(e){this.kickedPlayers.push(e)}action(){return this.msg}state(e,t){return void 0===e?this.nextGame.state:void 0===t?this.nextGame.state[e]:void(this.nextGame.state[e]=t)}playerList(){return Object.keys(this.nextGame.players)}playerCount(){return Object.keys(this.nextGame.players).length}players(e,t){return void 0===e?this.nextGame.players:void 0===t?this.nextGame.players[e]:void(this.nextGame.players[e]=t)}rules(e,t){return void 0===e?this.nextGame.rules:void 0===t?this.nextGame.rules[e]:void(this.nextGame.rules[e]=t)}prev(e){return"object"==typeof e&&(this.nextGame.prev=e),this.nextGame.prev}next(e){return"object"==typeof e&&(this.nextGame.next=e),this.nextGame.next}setTimeLimit(e){this.nextTimeLimit=Math.min(60,Math.max(10,e))}event(e){this.nextGame.events.push(e)}clearEvents(){this.nextGame.events=[]}events(e){if(void 0===e)return this.nextGame.events;this.nextGame.events.push(e)}};let t={state:{cells:["","","","","","","","",""],startPlayer:""},players:{},rules:{bestOf:5,maxPlayers:2},next:{},events:[]};const s=new class{onNewGame(){e.setGame(t),this.checkNewRound()}onSkip(){let t=e.action(),s=e.next(),i=t.payload.id;i||(i=s.id),this.playerLeave(i)}onJoin(){e.action().user.id&&this.checkNewRound()}checkNewRound(){let t=e.rules("maxPlayers")||2;e.playerCount()>=t&&this.newRound()}onLeave(){let t=e.action();this.playerLeave(t.user.id)}playerLeave(t){let s=e.players(),i=null;if(s[t]&&(i=this.selectNextPlayer(t),delete s[t]),i){let e=s[i];this.setWinner(e.type,"forfeit")}}onPick(){let t=e.state(),s=e.action(),i=e.players(s.user.id),n=s.payload.cell;if(t.cells[n].length>0)return void e.next({id:s.user.id,action:"pick",error:"NOT_EMPTY"});let a=i.type,r=s.user.id;t.cells[n]=a,e.event("picked"),e.prev({cellid:n,id:r}),this.checkWinner()||this.selectNextPlayer()}newRound(){let t=e.playerList(),s=e.state();s.startPlayer&&0!=s.startPlayer.length?s.startPlayer=this.selectNextPlayer(s.startPlayer):s.startPlayer=this.selectNextPlayer(t[Math.floor(Math.random()*t.length)]);let i=e.players();for(var n in i)i[n].type="O";i[s.startPlayer].type="X"}selectNextPlayer(t){let s=e.action(),i=e.playerList();t=t||s.user.id;let n=i.filter((e=>e!=t));return e.next({id:n[0],action:"pick"}),n[0]}checkWinner(){return!!(this.check([0,1,2])||this.check([3,4,5])||this.check([6,7,8])||this.check([0,3,6])||this.check([1,4,7])||this.check([2,5,8])||this.check([0,4,8])||this.check([6,4,2])||this.checkNoneEmpty())}checkNoneEmpty(){let t=e.state().cells.filter((e=>""==e));return 0==t.length&&this.setTie(),0==t.length}check(t){let s=e.state().cells,i=s[t[0]];if(""==i)return!1;let n=t.filter((e=>s[e]==i));return 3==n.length&&n.length==t.length&&(this.setWinner(i,t),!0)}findPlayerWithType(t){let s=e.players();for(var i in s)if(s[i].type==t)return i;return null}setTie(){e.clearEvents(),e.event("tie"),e.next({}),e.prev({}),e.killGame()}setWinner(t,s){let i=this.findPlayerWithType(t),n=e.players(i);n||(n.id="unknown player"),e.clearEvents(),e.event("winner"),e.prev({pick:t,strip:s,id:i}),e.next({}),e.killGame()}};e.setTimeLimit(20),e.on("newgame",(()=>s.onNewGame())),e.on("skip",(()=>s.onSkip())),e.on("join",(()=>s.onJoin())),e.on("leave",(()=>s.onLeave())),e.on("pick",(()=>s.onPick())),e.submit()})();
//# sourceMappingURL=G:\GitHub\fsg-platform\templates\tictactoe\builds\serverserver.bundle.js.map